{
  "openapi": "3.1.0",
  "info": {
    "title": "Flex Services Api",
    "description": "API Genérica de Serviços",
    "license": {
      "name": "Flexdoc Tecnologia da Informação",
      "url": "http://www.flexdoc.com.br"
    },
    "version": "2.8.5"
  },
  "servers": [
    {
      "url": "https://services-hml.flexdoc-apis.com.br/services",
      "description": "Homologação ENV"
    }
  ],
  "security": [
    {
      "password_flow": [
        "read:all",
        "write:all"
      ]
    }
  ],
  "paths": {
    "/api/v1/authentication": {
      "post": {
        "security": [],
        "description": "Autentica o acesso a partir de usuário e senha e retorna o Bearer token JWT.\nCopie o `access_token` retornado e utilize-o no header `Authorization` para acessar os endpoints da API.",
        "tags": [
          "Authentication"
        ],
        "summary": "Autentica via Oauth2",
        "operationId": "authenticate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthJwtPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token JWT gerado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthJwtResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/extract/ocr": {
      "post": {
        "tags": [
          "Extract Services"
        ],
        "summary": "Extrai o OCR de um documento padronizado",
        "operationId": "flexOcr",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/OcrReqMultipart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operação realizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OcrResult"
                }
              }
            }
          },
          "400": {
            "description": "Erro na requisição"
          }
        }
      }
    },
    "/api/v1/extract/ocr/json": {
      "post": {
        "tags": [
          "Extract Services"
        ],
        "summary": "Extrai o OCR de um documento padronizado",
        "operationId": "flexOcrJson",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operação realizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OcrResult"
                }
              }
            }
          },
          "400": {
            "description": "Erro na requisição"
          }
        }
      }
    },
    "/api/v1/fraud/analysis": {
      "post": {
        "tags": [
          "Fraud Services"
        ],
        "summary": "Realiza analise de fraude de documentos de identificação",
        "operationId": "fraudAnalysis",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FraudAnalysisMultipart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operação realizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FraudAnalysisResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro na requisição"
          }
        }
      }
    },
    "/api/v1/fraud/analysis/facematch": {
      "post": {
        "tags": [
          "Fraud Services"
        ],
        "summary": "Realiza análise de fraude de documentos de identificação e face match com selfie",
        "operationId": "docAndFaceFraudAnalysis",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FraudFaceAnalysisMultipart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operação realizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FraudAnalysisResult"
                }
              }
            }
          },
          "400": {
            "description": "Erro na requisição"
          }
        }
      }
    },
    "/api/v1/fraud/analysis/facematch/json": {
      "post": {
        "tags": [
          "Fraud Services"
        ],
        "summary": "Realiza análise de fraude de documentos de identificação e face match com selfie",
        "operationId": "docAndFaceFraudAnalysisJson",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FraudFaceAnalysisReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operação realizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FraudAnalysisResult"
                }
              }
            }
          },
          "400": {
            "description": "Erro na requisição"
          }
        }
      }
    },
    "/api/v1/fraud/analysis/json": {
      "post": {
        "tags": [
          "Fraud Services"
        ],
        "summary": "Realiza analise de fraude de documentos de identificação",
        "operationId": "fraudAnalysisJson",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FraudAnalysisRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operação realizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FraudAnalysisResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro na requisição"
          }
        }
      }
    },
    "/api/v1/biometrics/face/liveness": {
      "post": {
        "tags": [
          "Biometrics Services"
        ],
        "summary": "Realiza o liveness facial",
        "operationId": "faceLiveness",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/LivenessRequestMultipart"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Liveness aprovado"
          },
          "406": {
            "description": "Liveness reprovado"
          }
        }
      }
    },
    "/api/v1/biometrics/face/liveness/json": {
      "post": {
        "tags": [
          "Biometrics Services"
        ],
        "summary": "Realiza o liveness facial",
        "operationId": "faceLivenessJson",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LivenessRequet"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Liveness aprovado"
          },
          "406": {
            "description": "Liveness reprovado"
          }
        }
      }
    },
    "/api/v1/biometrics/face/match": {
      "post": {
        "tags": [
          "Biometrics Services"
        ],
        "summary": "Realiza o faceMatch facial",
        "operationId": "faceMatch",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FaceMatchReqMultipart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "FaceMatch realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchResult"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição"
          }
        }
      }
    },
    "/api/v1/biometrics/face/match/json": {
      "post": {
        "tags": [
          "Biometrics Services"
        ],
        "summary": "Realiza o faceMatch facial",
        "operationId": "faceMatchJson",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaceMatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "FaceMatch realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchResult"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição"
          }
        }
      }
    },
    "/api/v1/onboarding/enroll": {
      "post": {
        "tags": [
          "Onboarding Services"
        ],
        "summary": "Realiza o cadastro completo de Onboarding",
        "description": "Realiza o cadastro completo de Onboarding e retorna o json com resultados de OCR, Biometrias, Dados Cadastrais, etc",
        "operationId": "enroll",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/EnrollReqMultipart"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cadastro realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollResult"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição"
          }
        }
      }
    },
    "/api/v1/onboarding/enroll/json": {
      "post": {
        "tags": [
          "Onboarding Services"
        ],
        "summary": "Realiza o cadastro completo de Onboarding",
        "description": "Realiza o cadastro completo de Onboarding e retorna o json com resultados de OCR, Biometrias, Dados Cadastrais, etc",
        "operationId": "enrollJson",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnrollRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cadastro realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollResult"
                }
              }
            }
          },
          "400": {
            "description": "Erro de requisição"
          }
        }
      }
    },
    "/api/v1/onboarding/enroll/{onboardingId}": {
      "get": {
        "tags": [
          "Onboarding Services"
        ],
        "summary": "Obtém o cadastro de onboarding",
        "operationId": "getEnrollment",
        "parameters": [
          {
            "name": "onboardingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operação realizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollResult"
                }
              }
            }
          },
          "404": {
            "description": "Onboarding não encontrado"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthJwtPayload": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "AuthJwtResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "expires_in": {
            "type": "integer",
            "format": "int32"
          },
          "refresh_token": {
            "type": "string"
          },
          "refresh_expires_in": {
            "type": "integer",
            "format": "int32"
          },
          "session_state": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          }
        }
      },
      "OcrReqMultipart": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "binary",
            "description": "Imagem do documento (PDF, JPG e PNG)"
          }
        },
        "required": [
          "image"
        ]
      },
      "JsonMap": {
        "type": "object",
        "additionalProperties": {
          "type": "object"
        },
        "properties": {
          "empty": {
            "type": "boolean"
          }
        }
      },
      "OcrFields": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "object"
          },
          "conf": {
            "type": "number",
            "format": "double"
          },
          "bbox": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "OcrResult": {
        "type": "object",
        "properties": {
          "typeRecognized": {
            "type": "string"
          },
          "digitalDocument": {
            "type": "boolean"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OcrFields"
            }
          },
          "statistics": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "properties": {
              "empty": {
                "type": "boolean"
              }
            }
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "OcrRequest": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string"
          }
        }
      },
      "FraudAnalysisMultipart": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "integer",
            "format": "int32",
            "description": "CPF (somente números)",
            "maxLength": 11,
            "minLength": 11
          },
          "imageFront": {
            "type": "string",
            "format": "binary",
            "description": "Frente do documento, frente/verso unificados ou PDF (jpeg, png, pdf)"
          },
          "imageBack": {
            "type": "string",
            "format": "binary",
            "description": "Verso do documento (jpeg, png, pdf)"
          }
        },
        "required": [
          "cpf",
          "imageFront"
        ]
      },
      "ExtractResult": {
        "type": "object",
        "properties": {
          "ocr": {
            "$ref": "#/components/schemas/OcrResult"
          },
          "biometrics": {
            "$ref": "#/components/schemas/JsonMap"
          },
          "yolo": {
            "$ref": "#/components/schemas/JsonMap"
          },
          "clearsale": {
            "$ref": "#/components/schemas/JsonMap"
          },
          "valid": {
            "$ref": "#/components/schemas/JsonMap"
          }
        }
      },
      "FaceMatchResult": {
        "type": "object",
        "properties": {
          "faceCrop": {
            "type": "string"
          },
          "match": {
            "type": "boolean"
          },
          "similarity": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "FraudAnalysisResult": {
        "type": "object",
        "properties": {
          "scoreResult": {
            "$ref": "#/components/schemas/ScoreResultJson"
          },
          "extractResult": {
            "$ref": "#/components/schemas/ExtractResult"
          },
          "faceMatchResult": {
            "$ref": "#/components/schemas/FaceMatchResult"
          }
        }
      },
      "PenaltyPayload": {
        "type": "object",
        "properties": {
          "hardStop": {
            "type": "boolean"
          },
          "ocr": {
            "type": "string"
          },
          "expected": {
            "type": "string"
          },
          "rulesName": {
            "type": "string",
            "enum": [
              "IDENT_01",
              "IDENT_02",
              "IDENT_03",
              "IDENT_04",
              "IDENT_05",
              "IDENT_06",
              "IDENT_07",
              "DEV_01",
              "DEV_03",
              "DEV_04",
              "DEV_05",
              "DEV_06",
              "DEV_07",
              "DEV_08",
              "DEV_09",
              "DEV_10",
              "DEV_11",
              "DEV_12",
              "DEV_13",
              "DEV_14",
              "DEV_15",
              "DEV_16",
              "RF_01",
              "RF_02",
              "RF_03",
              "RF_04",
              "RF_05",
              "RFPJ_01",
              "RFPJ_02",
              "RFPJ_03",
              "RFPJ_04",
              "OCR_01",
              "OCR_02",
              "OCR_03",
              "OCR_04",
              "OCR_05",
              "OCR_06",
              "OCR_07",
              "OCR_08",
              "OCR_09",
              "OCR_10",
              "OCR_11",
              "OCR_12",
              "IMG_01",
              "IMG_02",
              "IMG_03",
              "IMG_04",
              "IMG_05",
              "IMG_06",
              "IMG_07",
              "BLK_01",
              "BLK_02",
              "BLK_03",
              "BLK_04",
              "BLK_05",
              "BLK_06",
              "BLK_07",
              "BLK_08",
              "BLK_09",
              "BLK_10",
              "BLK_11",
              "BLK_12",
              "CNH_01",
              "CNH_02",
              "CNH_03",
              "CNH_04",
              "CNH_05",
              "CNH_06",
              "CNH_07",
              "CNH_08",
              "CNH_09",
              "CNH_10",
              "CNH_11",
              "CNH_12",
              "CNH_13",
              "CNH_14",
              "CNH_15",
              "CNH_16",
              "CNH_17",
              "CNH_18",
              "CNH_19",
              "CNH_20",
              "CNH_21",
              "RG_01",
              "RG_02",
              "RG_03",
              "RG_04",
              "RG_05",
              "RG_06",
              "RG_07",
              "RG_08",
              "RG_09",
              "RG_10",
              "RG_11",
              "RG_12",
              "RG_13",
              "RG_14",
              "RG_15",
              "RG_16",
              "RG_17",
              "RG_18",
              "RG_19",
              "RG_20",
              "RG_21",
              "RG_22",
              "RG_23",
              "RG_24",
              "RG_25",
              "RG_26",
              "RG_27",
              "RG_28",
              "RG_29",
              "RG_30",
              "RG_31",
              "RG_32",
              "RG_33",
              "RG_34",
              "RG_35",
              "RG_36",
              "RG_37",
              "RG_38",
              "RG_39",
              "RG_40",
              "RG_41",
              "RG_42",
              "RG_43",
              "RG_44",
              "RG_45",
              "RG_46",
              "RG_47",
              "RG_48",
              "RG_49",
              "RG_50",
              "PASS_01",
              "PASS_02",
              "PASS_03",
              "PASS_04",
              "PASS_05",
              "PASS_06",
              "PASS_07",
              "PASS_08",
              "PASS_09",
              "PASS_10",
              "RNM_01",
              "RNM_02",
              "RNM_03",
              "RNM_04",
              "RNM_05",
              "RNM_06",
              "RNM_07",
              "RNM_08",
              "RNM_10",
              "DTS_01",
              "DTS_02",
              "DTS_03",
              "DTS_04",
              "DTS_05",
              "DTS_06",
              "DTS_07",
              "DTS_08",
              "DTS_09",
              "FACE_01",
              "FACE_02",
              "FACE_03",
              "FINGER_01",
              "FINGER_02",
              "FINGER_03",
              "GEO_01",
              "GEO_02",
              "GEO_03",
              "GEO_04",
              "GEO_05",
              "GEO_06",
              "DB_FACE_01",
              "OTHER_01",
              "OTHER_02",
              "OTHER_03",
              "OTHER_04",
              "OTHER_05",
              "OTHER_06"
            ]
          },
          "rulesPenalty": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ScoreResultJson": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "hardStop": {
            "type": "boolean"
          },
          "penalties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PenaltyPayload"
            }
          },
          "statistic": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "properties": {
              "empty": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "FraudFaceAnalysisMultipart": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "integer",
            "format": "int32",
            "description": "CPF (somente números)",
            "maxLength": 11,
            "minLength": 11
          },
          "imageFront": {
            "type": "string",
            "format": "binary",
            "description": "Frente do documento, frente/verso unificados ou PDF (jpeg, png, pdf)"
          },
          "imageBack": {
            "type": "string",
            "format": "binary",
            "description": "Verso do documento (jpeg, png, pdf)"
          },
          "imageSelfie": {
            "type": "string",
            "format": "binary",
            "description": "Selfie (jpeg, png)"
          }
        },
        "required": [
          "cpf",
          "imageFront"
        ]
      },
      "FraudFaceAnalysisReq": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "string"
          },
          "imageFront": {
            "type": "string"
          },
          "imageBack": {
            "type": "string"
          },
          "imageSelfie": {
            "type": "string"
          }
        }
      },
      "FraudAnalysisRequest": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "string"
          },
          "imageFront": {
            "type": "string"
          },
          "imageBack": {
            "type": "string"
          }
        }
      },
      "LivenessRequestMultipart": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "binary",
            "description": "Imagem do documento (PDF, JPG e PNG)"
          }
        },
        "required": [
          "image"
        ]
      },
      "LivenessRequet": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string"
          }
        }
      },
      "FaceMatchReqMultipart": {
        "type": "object",
        "properties": {
          "imageA": {
            "type": "string",
            "format": "binary",
            "description": "Selfie A ou Document ID"
          },
          "imageB": {
            "type": "string",
            "format": "binary",
            "description": "Selfie B"
          }
        },
        "required": [
          "imageA",
          "imageB"
        ]
      },
      "MatchResult": {
        "type": "object",
        "properties": {
          "similarity": {
            "type": "number",
            "format": "double"
          },
          "match": {
            "type": "boolean"
          }
        }
      },
      "FaceMatchRequest": {
        "type": "object",
        "properties": {
          "imageA": {
            "type": "string"
          },
          "imageB": {
            "type": "string"
          }
        }
      },
      "EnrollReqMultipart": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "integer",
            "format": "int32",
            "description": "CPF (somente números)",
            "maxLength": 11,
            "minLength": 11
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "E-mail"
          },
          "phone": {
            "type": "integer",
            "format": "phone",
            "description": "Telefone (somente números)"
          },
          "zipCode": {
            "type": "integer",
            "format": "zip-code",
            "description": "CEP (somente números)",
            "maxLength": 8,
            "minLength": 8
          },
          "imageFront": {
            "type": "string",
            "format": "binary",
            "description": "Frente do documento, frente/verso unificados ou PDF (jpg, png, pdf)"
          },
          "imageBack": {
            "type": "string",
            "format": "binary",
            "description": "Verso do documento (jpg, png, pdf)"
          },
          "imageSelfie": {
            "type": "string",
            "format": "binary",
            "description": "Selfie (jpg, png, pdf)"
          },
          "callBackUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL de callback (WebHook)"
          },
          "basicAuth": {
            "type": "string",
            "format": "username:password",
            "description": "Basic Authorization (WebHook)"
          }
        },
        "required": [
          "cpf",
          "imageFront"
        ]
      },
      "EnrollResult": {
        "type": "object",
        "properties": {
          "onboardingId": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "STARTED",
              "PENDING",
              "PROCESSING",
              "ANALYSIS",
              "DONE",
              "REJECTED",
              "CANCELED",
              "ERROR",
              "BLACKLISTED",
              "RESOLVED"
            ]
          },
          "statusReason": {
            "type": "string"
          },
          "faceMatch": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "properties": {
              "empty": {
                "type": "boolean"
              }
            }
          },
          "basicData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "properties": {
              "empty": {
                "type": "boolean"
              }
            }
          },
          "scoreData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "properties": {
              "empty": {
                "type": "boolean"
              }
            }
          },
          "ocrData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "properties": {
              "empty": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "EnrollRequest": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "imageFront": {
            "type": "string"
          },
          "imageBack": {
            "type": "string"
          },
          "imageSelfie": {
            "type": "string"
          },
          "callBackUrl": {
            "type": "string"
          },
          "basicAuth": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "password_flow": {
        "type": "oauth2",
        "description": "Informe o `access_token` gerado pelo endpoint `/api/v1/authentication` no header `Authorization`",
        "flows": {
          "password": {
            "tokenUrl": "/services/api/auth/swagger",
            "scopes": {
              "read:all": "read all data belongging to your account",
              "write:all": "write all data belongging to your account"
            }
          }
        }
      }
    }
  }
}
